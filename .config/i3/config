# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 9.5
# font pango:Dark Crystal 12

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
#exec --no-startup-id nm-applet
exec_always --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
set $play_test paplay ~/.config/i3/music/audio-volume-change.oga

bindsym XF86AudioRaiseVolume exec --no-startup-id ~/.config/i3/scripts/volume.sh -u
bindsym XF86AudioLowerVolume exec --no-startup-id ~/.config/i3/scripts/volume.sh -d
bindsym XF86AudioMute exec --no-startup-id ~/.config/i3/scripts/volume.sh -t
bindsym XF86AudioMicMute exec --no-startup-id ~/.config/i3/scripts/volume.sh -m

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal, mode "$shift"

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
bindsym $mod+Shift+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1:󰈹"
set $ws2 "2:󰞷"
set $ws3 "3:󱇧"
set $ws4 "4:󰈔"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
# original format is
# bindsym $mod+1 workspace number $ws1
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10


# move focused container to workspace
# original format is
# bindsym $mod+Shift+0 move container to workspace $ws1
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Edits start here

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
#bar {
#	id bar-1
#	position top
#	status_command ~/.config/i3/scripts/./.brightness.sh
#}

bindsym --release XF86MonBrightnessDown exec ~/.config/i3/scripts/acpi_brightness.sh -d
bindsym --release XF86MonBrightnessUp exec ~/.config/i3/scripts/acpi_brightness.sh -u

# Included in script itself
# set $refresh_i3status killall -SIGUSR1 i3status

# bindsym $mod+b mode "brightness"
#
# mode "brightness" {
#	bindsym d exec /home/dakksh/.config/i3/scripts/./acpi_brightness.sh -dec
#	
#	bindsym Escape mode "default"
# }

set  $Locker i3lock -i ~/Pictures/Wallpapers/1.png

set $mode_system (l)lock (e)logout (s)suspend (h)hibernate (r)reboot (Shift+s)shutdown (Escape/Return)default

mode "$mode_system" {
	bindsym l exec --no-startup-id $Locker, mode "default"
	bindsym e exec --no-startup-id i3-msg exit, mode "default"
	bindsym s exec --no-startup-id $Locker && systemctl suspend, mode "default"
	bindsym h exec --no-startup-id $Locker && systemctl hibernate, mode "default"
	bindsym r exec --no-startup-id systemctl reboot, mode "default"
	bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"

	# back to normal: Enter or Escape
	bindsym Return mode "default"
	bindsym Escape mode "default"
}

bindsym $mod+Escape mode "$mode_system"

bindsym --release XF86ScreenSaver exec --no-startup-id $Locker, mode "default"
bindsym --release XF86Sleep exec --no-startup-id $Locker && systemctl suspend, mode "default"
bindsym --release XF86PowerOff exec --no-startup-id systemctl poweroff -i, mode "default"
bindsym --release Shift+XF86PowerOff exec --no-startup-id systemctl reboot, mode "default"

exec_always --no-startup-id feh --no-fehbg --bg-scale ~/Pictures/Wallpapers/2.jpg
exec_always --no-startup-id numlockx on

bar {
	id bar-0
	# i3-gaps supports the next line for i3bar
	# height 20
	# Check in i3-gaps. This doesn't work in i3, without compton
	i3bar_command i3bar --transparency
	colors {
		background #360945
		statusline #ffffff
		separator  #11cc99
		
		#Type              border  bg      font
		
		focused_workspace  #88ff99 #9d0434 #ffffff
		active_workspace   #333333 #5f676a #ffffff
		inactive_workspace #22aa99 #222222 #888888
		urgent_workspace   #aa0000 #990000 #ffffff
	}
	position bottom
	status_command i3status # -c ~/.config/i3/i3status/i3status.conf
	output primary
	mode hide
	tray_output none
	font pango:Quintessential 14
	separator_symbol "#"
	modifier Mod1+Mod4
	
	# bindsym button1 nop
	# workspace_buttons no
	# binding_mode_indicator no
	strip_workspace_numbers yes
	# strip_workspace_name yes|no does opposite of upper option
}

bindsym $mod+n bar mode toggle bar-0

set $print print

mode $print {
	# To take screenshot
	# Print for screen, Shift for active window, Ctrl for area, Shift+Ctrl for interactive
	# Add +j to commands for jpg screenshot
	bindsym Print exec DATE=$(date +%d-%m-%Y-%H:%M:%S) && gnome-screenshot -f ~/Pictures/Screenshots/Screenshot-$DATE.png, mode "default"
	bindsym Shift+Print exec DATE=$(date +%d-%m-%Y-%H:%M:%S) && gnome-screenshot -wB -f ~/Pictures/Screenshots/Screenshot-$DATE.png, mode "default"
	bindsym Ctrl+Print exec DATE=$(date +%d-%m-%Y-%H:%M:%S) && gnome-screenshot -aB -f ~/Pictures/Screenshots/Screenshot-$DATE.png, mode "default"
	bindsym Shift+Ctrl+Print exec DATE=$(date +%d-%m-%Y-%H:%M:%S) && gnome-screenshot -i -f ~/Pictures/Screenshots/Screenshot-$DATE.png, mode "default"

	bindsym j exec DATE=$(date +%d-%m-%Y-%H:%M:%S) && gnome-screenshot -f ~/Pictures/Screenshots/Screenshot-$DATE.jpg, mode "default"
	bindsym Shift+j exec DATE=$(date +%d-%m-%Y-%H:%M:%S) && gnome-screenshot -wB -f ~/Pictures/Screenshots/Screenshot-$DATE.jpg, mode "default"
	bindsym Ctrl+j exec DATE=$(date +%d-%m-%Y-%H:%M:%S) && gnome-screenshot -aB -f ~/Pictures/Screenshots/Screenshot-$DATE.jpg, mode "default"
	bindsym Shift+Ctrl+j exec DATE=$(date +%d-%m-%Y-%H:%M:%S) && gnome-screenshot -i -f ~/Pictures/Screenshots/Screenshot-$DATE.jpg, mode "default"

	# To return to default mode
	bindsym Return mode "default"
	bindsym Escape mode "default"
}

bindsym Print mode $print

bindsym Mod1+F4 kill

# To shift container back and forth from workspaces
# workspace_auto_back_and_forth yes
bindsym $mod+z workspace back_and_forth
bindsym $mod+Shift+z move container to workspace back_and_forth, workspace back_and_forth

# Key bindings for different applications
bindsym $mod+b exec --no-startup-id firefox -private-window; mode "$shift"
bindsym $mod+Shift+b exec --no-startup-id firefox; mode "$shift"
# bindsym Ctrl+Mod1+t exec gnome-terminal; mode "$shift"
bindsym $mod+t exec gnome-terminal -e vim; mode "$shift"
bindsym $mod+Shift+t exec gedit; mode "$shift"
bindsym $mod+x exec nautilus; mode "$shift"

set $shift shift ftex

mode "$shift" {
	
	# Focus on specific applications
	
	bindsym f	[id="$(xdotool getactivewindow)" title="Private Browsing"] focus; move to workspace $ws1; workspace $ws1; mode "default"
	bindsym Ctrl+f	[id="$(xdotool getactivewindow)" title="Firefox$"] focus; move to workspace $ws1; workspace $ws1; mode "default"
	
	bindsym t	[id="$(xdotool getactivewindow)" title="^(root|dakksh)"] focus; move workspace $ws2; workspace $ws2; mode "default"
	
	# bindsym e	[class="Gedit"] focus, move container to workspace $ws3, workspace $ws3, mode "default"; [title="Terminal"] focus, move container to workspace $ws3, workspace $ws3, mode "default"
	bindsym e	[id="$(xdotool getactivewindow)" title="VIM$"] focus; move workspace $ws3; workspace $ws3; mode "default"
	bindsym Ctrl+e	[id="$(xdotool getactivewindow)" title="gedit$"] focus; move workspace $ws3; workspace $ws3; mode "default"
	
	# bindsym x	[class="Org.gnome.Nautilus"] focus, move container to workspace $ws4, workspace $ws4, mode "default"
	bindsym x	[id="$(xdotool getactivewindow)" class="Org.gnome.Nautilus"] focus; move workspace $ws4; workspace $ws4; mode "default"
	
	bindsym Ctrl+e	move container to workspace $ws3, workspace back_and_forth, mode "default"
	
	# Start application in specified workspace, and shift back to original
	bindsym Shift+f	workspace $ws1, exec firefox -private-window, workspace back_and_forth, mode "default"
	bindsym Ctrl+Shift+f	workspace $ws1, exec firefox, workspace back_and_forth, mode "default"
	
	bindsym Shift+t	workspace $ws2, exec gnome-terminal, workspace back_and_forth, mode "default"
	
	bindsym Shift+e	workspace $ws3, exec gnome-terminal -e vim, workspace back_and_forth, mode "default"
	bindsym Ctrl+Shift+e	workspace $ws3, exec gedit, workspace back_and_forth, mode "default"
	
	bindsym Shift+x	workspace $ws4, exec nautilus, workspace back_and_forth, mode "default"
	
	# back to normal: Enter or Espace
	bindsym Return mode "default"
	bindsym Escape mode "default"
}

bindsym $mod+Shift+f mode "$shift"

# workspace_layout tabbed
# Adds all new containers in tabbed mode
exec --no-startup-id i3-msg 'layout tabbed; exec firefox -private-window; exec brave-browser --incognito; workspace $ws2; exec gnome-terminal; workspace $ws3; exec gnome-terminal -e vim; workspace $ws1'

# Used to open Certain applications always in a certain ws
# assign [class="Firefox"] $ws1
# Get focus to shift on application opening
# for_window [class="Firefox"] focus

# assign [class="Gnome-terminal"]	$ws2
# assign [class="Gedit"] 		$ws3

# Focus on any application out of all open applications
bindsym $mod+Ctrl+f exec ~/.config/i3/scripts/focus.sh all

# Add notification config to focus.sh which gives a notif instead of dmenu if workspace is empty
# Add key binding to search for workspace name and accordingly print all those applications with their workspaces as an option
# bindsym $mod+Ctrl+1 exec ~/.config/i3/scripts/./focus.sh $ws1

bindsym Shift+Ctrl+space exec ~/.config/i3/scripts/focus.sh app

# Kill all containers in given workspace
# i3-msg [workspace=$ws2] kill
#
# Using your brain you can take input using dmenu and kill all applications with a given name
# Also can set up a script to take input as well as ask what to do with window
# EG - Focus, kill, shift and so on
# Close all windows on all workspaces (any class string)
# bindsym $mod+Shift+q [class=”.*”] kill
# bindsym $mod+q exec i3-input -F '[workspace=^%s$] kill' -P 'kill workspace?'
#
# move to workspace prev will take it to workspace prev on output, and next will take it to next
# will cycle around if required

# exec_always compton --config /home/dakksh/.compton.conf

for_window [class=YADWIN] border none floating enable

# exec_always xmodmap -e 'keycode 248 = XF86AudioMicMute'
